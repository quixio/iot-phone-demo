# Use Golang image for building Telegraf
FROM --platform=linux/amd64 golang:1.23-alpine AS builder

# Set the working directory and install dependencies
WORKDIR /go/src/github.com/influxdata
RUN apk add --no-cache git make

# Clone the Telegraf source code in a separate step to leverage Docker layer caching
RUN git clone https://github.com/influxdata/telegraf.git

# Set up Go modules and download dependencies
WORKDIR /go/src/github.com/influxdata/telegraf
RUN go mod download

# Copy only plugin code to avoid invalidating previous layers when other files change
COPY plugins/outputs /go/src/github.com/influxdata/telegraf/plugins/outputs/

# Build Telegraf with the custom plugin
RUN go build -o telegraf ./cmd/telegraf

# Use the official Telegraf image for the final container
FROM telegraf:latest

# Copy the built Telegraf binary from the builder stage
COPY --from=builder /go/src/github.com/influxdata/telegraf/telegraf /usr/bin/telegraf

# Copy the Telegraf configuration file
COPY telegraf.conf /etc/telegraf/telegraf.conf

# Ensure the binary has executable permissions
RUN chmod +x /usr/bin/telegraf

# Default command to run Telegraf
CMD ["/usr/bin/telegraf", "--config", "/etc/telegraf/telegraf.conf"]