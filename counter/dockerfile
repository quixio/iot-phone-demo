# Stage 1: Build the application
FROM maven:3.8.4-openjdk-17 AS build

# Set the working directory in the container
WORKDIR /app

# Copy the pom.xml and download dependencies
COPY pom.xml .
RUN mvn dependency:go-offline

# Copy the entire project and build the application
COPY src ./src
RUN mvn clean package -DskipTests

# Stage 2: Run the application
FROM openjdk:17-jdk-slim

# Set the working directory in the container
WORKDIR /app
COPY config.yaml /app/config.yaml

# Copy the built shaded JAR file from the previous stage
COPY --from=build /app/target/kafka-message-count-1.0-SNAPSHOT.jar app.jar

# Copy the Prometheus JMX Exporter and configuration file
ADD https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.1/jmx_prometheus_javaagent-0.16.1.jar /app/jmx_prometheus_javaagent.jar

# Expose port 80 for Prometheus metrics
EXPOSE 80

# Run the application with JMX enabled
ENTRYPOINT ["java", \
    "-javaagent:/app/jmx_prometheus_javaagent.jar=80:/app/config.yaml", \
    "-Dcom.sun.management.jmxremote", \
    "-Dcom.sun.management.jmxremote.port=8080", \
    "-Dcom.sun.management.jmxremote.rmi.port=8081", \
    "-Dcom.sun.management.jmxremote.authenticate=false", \
    "-Dcom.sun.management.jmxremote.ssl=false", \
    "-Djava.rmi.server.hostname=localhost", \
    "-jar", "/app/app.jar"]